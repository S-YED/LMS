# Docker Compose for Local Development
version: '3.8'

services:
  # Main Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: leave-management-app
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DATABASE_URL=jdbc:mysql://mysql:3306/leave_management_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      - DATABASE_USERNAME=leave_user
      - DATABASE_PASSWORD=leave_password
      - MAIL_HOST=mailhog
      - MAIL_PORT=1025
      - MAIL_SMTP_AUTH=false
      - MAIL_SMTP_STARTTLS=false
      - JPA_DDL_AUTO=update
      - JPA_SHOW_SQL=false
      - LOG_LEVEL_ROOT=INFO
      - LOG_LEVEL_APP=DEBUG
    depends_on:
      mysql:
        condition: service_healthy
      mailhog:
        condition: service_started
    volumes:
      - app_logs:/app/logs
    networks:
      - leave-management-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: leave-management-mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: leave_management_db
      MYSQL_USER: leave_user
      MYSQL_PASSWORD: leave_password
      MYSQL_ROOT_HOST: '%'
    volumes:
      - mysql_data:/var/lib/mysql
      - ./src/main/resources/db/migration:/docker-entrypoint-initdb.d:ro
    networks:
      - leave-management-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "leave_user", "-pleave_password"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    command: --default-authentication-plugin=mysql_native_password

  # MailHog for email testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: leave-management-mailhog
    ports:
      - "1025:1025"  # SMTP port
      - "8025:8025"  # Web UI port
    networks:
      - leave-management-network
    restart: unless-stopped

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: leave-management-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - leave-management-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  # Adminer for database management
  adminer:
    image: adminer:latest
    container_name: leave-management-adminer
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    networks:
      - leave-management-network
    restart: unless-stopped
    depends_on:
      - mysql

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  app_logs:
    driver: local

networks:
  leave-management-network:
    driver: bridge
    name: leave-management-network